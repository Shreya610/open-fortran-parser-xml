sudo: required
language: generic
matrix:
  include:
    - os: linux
      language: python
      python: "3.6"
      env: JDK=oraclejdk8
    - os: linux
      language: python
      python: "3.6"
      env: JDK=oraclejdk9
    - os: linux
      language: python
      python: "3.6"
      env: JDK=openjdk7
    - os: linux
      language: python
      python: "3.6"
      env: JDK=openjdk8
    - os: linux
      language: python
      python: "3.6-dev"
      env: JDK=oraclejdk9
    - os: linux
      language: python
      python: "3.7-dev"
      env: JDK=oraclejdk9
    - os: osx
      language: generic
      env: TRAVIS_PYTHON_VERSION="3.6.2"
      jdk: oraclejdk9
    - os: osx
      language: generic
      env: TRAVIS_PYTHON_VERSION="3.6-dev"
      jdk: oraclejdk9
    - os: osx
      language: generic
      env: TRAVIS_PYTHON_VERSION="3.7-dev"
      jdk: oraclejdk9
  allow_failures:
    - python: "3.6-dev"
    - python: "3.7-dev"
    - env: TRAVIS_PYTHON_VERSION="3.6-dev"
    - env: TRAVIS_PYTHON_VERSION="3.7-dev"

before_install:
  - |
    set -e
    if [[ "${TRAVIS_OS_NAME}" == "osx" ]]; then
      brew update
      brew install pyenv || brew upgrade pyenv
      pyenv install "${TRAVIS_PYTHON_VERSION}"
      export PATH="$HOME/.pyenv/versions/${TRAVIS_PYTHON_VERSION}/bin:${PATH}"
      brew install ant || brew upgrade ant
    fi
    set +e
  - |
    set -e
    if [[ "${TRAVIS_OS_NAME}" == "linux" ]]; then
      jdk_switcher use $JDK
    fi
    set +e
  - java -version
  - python --version
  # Open Fortran Parser
  - git clone "https://github.com/OpenFortranProject/open-fortran-parser" "../open-fortran-parser"
  # Open Fortran Compiler
  - git clone "https://github.com/codethinklabs/ofc" "../open-fortran-compiler"
  - cd "../open-fortran-compiler" && make && cd -
  - export PATH="${PATH}:$(pwd)/../open-fortran-compiler"
  # FFB-MINI app
  - git clone "https://github.com/mbdevpl/ffb-mini" "../ffb-mini" --branch ofp_tests
  # miranda_io app
  - git clone "https://github.com/mbdevpl/miranda_io" "../miranda_io"

install:
  # dependencies
  - pip install -U pip
  - pip install -U -r dev_requirements.txt
  # Java
  - python open_fortran_parser/dev_dependencies.py
  - export CLASSPATH="${CLASSPATH}:$(pwd)/lib/*"
  - ant
  - export CLASSPATH="${CLASSPATH}:$(pwd)/dist/*"
  # Java tests
  - wget "https://github.com/mbdevpl/open-fortran-parser-xml/releases/download/v0.2.0/org.jacoco.agent-0.7.9-runtime.jar" -O "lib/org.jacoco.agent-0.7.9-runtime.jar"
  - wget "https://github.com/mbdevpl/open-fortran-parser-xml/releases/download/v0.2.0/org.jacoco.cli-0.7.10-20170927.171630-24-nodeps.jar" -O "lib/org.jacoco.cli-0.7.10-20170927.171630-24-nodeps.jar"

script:
  - TEST_PACKAGING=1 TEST_DEPENDENCIES=1 python -m coverage run --branch --source . -m unittest discover --verbose

after_success:
  - python -m coverage report --show-missing
  - java -jar "lib/org.jacoco.cli-0.7.10-20170927.171630-24-nodeps.jar" report "jacoco.exec" --classfiles "bin/" --sourcefiles "src/" --xml jacoco.xml
  - codecov
  - python -m pylint --load-plugins=pylint.extensions.mccabe --docstring-min-length 5 --no-docstring-rgx "^(test)?_|.*Tests$" --unsafe-load-any-extension y --output-format colorized  --reports y $(find . -name "*.py")

notifications:
  slack:
    secure: "OiXc/9CvAVd1l3xWTP554GzPe7ba6cBUHzLLHi4siEW0TDCDeJAzRrFbA/Ei2OTBqVX5p6b4uqeuPCc+IIYhcNDZa4tvEAAyfMIttKEEiEE7qMESxaqXkYQo0IIDu2FVjNjvqZlOfzc9kjFL2J2W3uCd/yivd/WOIoIijkU1HiFfN7wk6e+1ATUIyPXrNJNDYpE2/gKJhMVNHexjEQkeNgGN4eoAU/2cTdwI23SkHCsPgxbgCSMCUn0N/ZsTEgu/zzVFUBlqzzDZKR+fHmrCv7pLHSkIe2WROlbAFyg0AzIEJwhTLbZLOC9Xh1FLhigYvNDaZsOFUnlSEwmSjegvtnXLQkJ2vtSS7xf2UaLdc4w+kgv6If7369IICHgi59X97C8dT9W+YeZoidkINiMuijmCkTKqKF+DhpOx6x2bt6Pk91RscIjwqamb1a0SvMhgqtfpYQz/UkyDadC3g2BsHdg0l+K6ZmEWtfJUMAVctsr8dvwg2KlwrfX5V4+ecwzluz5aL7jYBzXRlgO83ulvM+xaS/9+CGMn08w6ipCjK2xrD4ZKMnoHBr2s+ijceoYINg9nDefNknV9C2Ja/pjgMCtWKZNlX/PkhbOq0oLBBsoUM3Mp1JgP86I88H6TSCRFk8ASV/ghZeaAr8k7AzZi2TAzGFh90KGrlw6aNzvqVak="
  email: false
